/* =============================================================================
   UNIFIED PLOTTER ANIMATIONS & STYLES
   =============================================================================
   This file contains CSS animations and styles used throughout the
   UnifiedPlotter component system for smooth, modern interactions.
*/

/* Spinning animation for loading indicators */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Fade in animation for success indicators */
@keyframes fadeInSuccess {
  0% {
    opacity: 0;
    transform: translateY(-10px) scale(0.9);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Fade out animation for hiding indicators */
@keyframes fadeOutSuccess {
  0% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  100% {
    opacity: 0;
    transform: translateY(-10px) scale(0.9);
  }
}

/* Smooth fade-in animation for tooltips */
@keyframes tooltipFadeIn {
  0% {
    opacity: 0;
    transform: translateY(4px) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Enhanced hover tooltip styling with legend-safe positioning */
.plotly .hoverlayer .hovertext {
  animation: tooltipFadeIn 0.15s ease-out !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  border: 1px solid rgba(148, 163, 184, 0.2) !important;
  backdrop-filter: blur(4px) !important;
  z-index: 1000 !important; /* Ensure tooltip stays below legend */
  max-width: 300px !important; /* Prevent tooltip from being too wide */
}

/* Ensure legend has higher z-index than tooltips */
.plotly .legend {
  z-index: 1001 !important;
  background: rgba(255, 255, 255, 0.95) !important;
  border-radius: 6px !important;
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1) !important;
  padding: 8px !important;
}

/* Style the crosshair to ensure it doesn't interfere with legend */
.plotly .nsewdrag .crosshair {
  z-index: 999 !important; /* Below legend and tooltip */
}

/* Enhanced crosshair styling for both horizontal and vertical guides */
.plotly .xlines-above line,
.plotly .ylines-above line {
  stroke-dasharray: 4 4 !important; /* Dashed pattern */
  stroke-width: 1 !important; /* Thin line */
  stroke: #9ca3af !important; /* gray-400 - subtle but visible */
  opacity: 0.8 !important; /* Slightly transparent */
  z-index: 999 !important; /* Below legend and tooltip */
}

/* Ensure crosshair lines are properly styled */
.plotly .xlines-above,
.plotly .ylines-above {
  pointer-events: none !important; /* Don't interfere with interactions */
}

/* Data point hover animation */
@keyframes dataPointHover {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.1);
  }
}

/* Scale in animation for checkmark icon */
@keyframes scaleIn {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Pulse animation for loading states */
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Slide in animation for panels */
@keyframes slideInRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Slide in animation from top */
@keyframes slideInTop {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Scale in animation */
@keyframes scaleIn {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Utility classes for common animations */
.plotter-spin {
  animation: spin 1s linear infinite;
}

.plotter-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.plotter-fade-in-success {
  animation: fadeInSuccess 0.5s ease-out;
}

.plotter-slide-in-right {
  animation: slideInRight 0.3s ease-out;
}

.plotter-slide-in-top {
  animation: slideInTop 0.3s ease-out;
}

.plotter-scale-in {
  animation: scaleIn 0.2s ease-out;
}

/* Glass morphism effect for modern UI elements */
.plotter-glass {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.95),
    rgba(248, 250, 252, 0.95)
  );
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.plotter-glass-dark {
  background: linear-gradient(
    135deg,
    rgba(0, 0, 0, 0.85),
    rgba(31, 41, 55, 0.85)
  );
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

/* Smooth transitions */
.plotter-transition {
  transition: all 0.3s ease-in-out;
}

.plotter-transition-fast {
  transition: all 0.15s ease-in-out;
}

.plotter-transition-slow {
  transition: all 0.5s ease-in-out;
}

/* Hover effects */
.plotter-hover-scale:hover {
  transform: scale(1.05);
}

.plotter-hover-shadow:hover {
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

/* Focus styles for accessibility */
.plotter-focus:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Loading skeleton effect */
@keyframes skeleton-loading {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

.plotter-skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200px 100%;
  animation: skeleton-loading 1.5s infinite;
}
